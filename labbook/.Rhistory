function(x){ htmltools::span(x, class="dir") },
character(1)
)
interdirs <- c("a", "dir")
interdirs <- vapply(
interdirs,
function(x){ htmltools::span(x, class="dir") },
character(1)
)
interdirs
htmltools::span(x, class="dir")
htmltools::span("a", class="dir")
x <- htmltools::span("a", class="dir")
class(x)
vapply(
interdirs,
function(x){ sprintf("<span class='dir'>%s</span>", x) },
character(1)
)
paste(interdirs, collapse = "<span class='div'>/</span>")
interdirs <- vapply(
interdirs,
function(x){ sprintf("<span class='dir'>%s</span>", x) },
character(1)
)
interdirs <- paste(interdirs, collapse = "<span class='div'>/</span>")
interdirs
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
nchar(c("an", "example"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
c(1,NULL, 2)
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
file.path("..", "notes", NULL)
file.path("..", "notes")
file.path("..", "notes", "")
file.path("notes")
file.path("..", file.path("notes"))
file.path("..", file.path("notes", "september"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/R/todo.R')
trimws("   ")
source('~/Desktop/labbook/R/todo.R')
warnings()
source('~/Desktop/labbook/R/todo.R')
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/R/todo.R')
parseOverallTodo("~/Dropbox/LabBook2/todo/overall-todo.md")
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
labbook.init("~/Dropbox/", "Sam's labbook", "Flu B Landscapes")
labbook.init("~/Dropbox/", "Sam's labbook", "Flu B Landscapes")
source('~/Desktop/labbook/R/core.R')
labbook.init("~/Dropbox/", "Sam's labbook", "Flu B Landscapes")
rstudioapi::getActiveProject()
library(labbook)
devtools::install()
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
source('~/Desktop/labbook/R/render.R')
source('~/Desktop/labbook/R/todo.R')
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
rstudioapi::getActiveProject()
rstudioapi::getActiveProject()
rstudioapi::getActiveProject()
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
rstudioapi::getActiveDocumentContext()
filepath <- rstudioapi::getActiveDocumentContext()
filepath$id
filepath$path
basename(rstudioapi::getActiveDocumentContext()$path)
source('~/Desktop/labbook/R/todo.R')
devtools::install(quick = TRUE)
system2("osascript", "~/Desktop/test.script")
system2(
"osascript",
"-e", 'tell application "Safari"',
"-e", 'set vURL to URL of current tab of window 1',
"-e", 'end tell'
)
system2(
"osascript",
"-e", 'tell application "Safari"'
)
system2(
"osascript",
"-e", 'tell application "Safari"',
"-e", 'set vURL to URL of current tab of window 1',
"-e", 'end tell'
)
system2(
command = "osascript",
args = c(
"-e", 'tell application "Safari"',
"-e", 'set vURL to URL of current tab of window 1',
"-e", 'end tell'
)
)
system2(
command = "osascript",
input = c(
'tell application "Safari"',
'set vURL to URL of current tab of window 1',
'end tell'
)
)
source('~/Desktop/labbook/R/utils.R')
rstudioapi::getActiveProject()
source('~/Desktop/labbook/R/utils.R')
safaripage
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
library(labbook)
library(help = "rstudioapi")
?rstudioapi::projects
source('~/Desktop/labbook/R/utils.R')
source('~/Desktop/labbook/R/utils.R')
devtools::install(quick = TRUE)
library(labbook)
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
commentlines
code[commentlines]
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
code
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
code
readLines("tests/testdata/example.R")
rstudioapi::documentSave()
rstudioapi::documentSave()
options()
x <- options()
documentSave
rstudioapi::documentSave
callFun
rstudioapi::callFun
rstudioapi::documentSave
rstudioapi:::documentSave
readLines("~/.rstudio-desktop/monitored/user-settings/user-settings")
cat(readLines("~/.rstudio-desktop/monitored/user-settings/user-settings"))
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
projectsectionnode <- get_index_project_section(index)
projectsectionnode
as.list(projectsectionnode)
class(as.list(projectsectionnode))
library(help = "xml2")
xml2::as_list(projectsectionnode)
tmp_html <- tempfile()
xml2::write_html(index, tmp_html)
system2("open", tmp_html)
xml2::write_html(projectsectionnode, tmp_html)
system2("open", args = c("-a", "Sublime Text", tmp_html))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(projectsectionnode, tmp_html, options = c("format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_xml(projectsectionnode, tmp_html, options = c("format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
tmp_html <- tempfile()
xml2::write_xml(projectsectionnode, tmp_html, options = c("format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(projectsectionnode, tmp_html, options = c("format"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::as_list(projectsectionnode)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "no_empty_tags"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
tmp_html <- tempfile()
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "no_empty_tags"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(projectsectionnode, tmp_html, options = c("format format_whitespace"))
xml2::write_html(projectsectionnode, tmp_html, options = c("format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(projectsectionnode, tmp_html, options = c("no_empty_tags"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(index, tmp_html, options = c("format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(index, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
library(XML)
help(package = "xml2")
projectsectionnode <- XML::htmlParse(tmp_html)
XML::saveXML(projectsectionnode, tmp_html)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
XML::saveXML(projectsectionnode, tmp_html, indent = TRUE)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
unlink(tmp_html)
# projectsectionnode <- XML::htmlParse(tmp_html)
# XML::saveXML(projectsectionnode, tmp_html, indent = TRUE)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::write_html(index, tmp_html, options = c("format", "format_whitespace"))
# projectsectionnode <- XML::htmlParse(tmp_html)
# XML::saveXML(projectsectionnode, tmp_html, indent = TRUE)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
projectsectionnode
xml2_example()
xml2::xml2_example()
xml2::xml2_example("r-project.html")
system2("open", xml2::xml2_example("r-project.html"))
xml2::xml_structure(projectsectionnode)
projectsectionnode
projectsectionnode <- get_index_project_section(index)
projectsectionnode
xml2::xml_structure(projectsectionnode)
tmp_html <- tempfile()
unlink(tmp_html)
xml2::write_html(index, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
projectsectionnode <- get_index_project_section(index)
unlink(tmp_html)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
projectsectionnode
projectsectionnode[1]
projectsectionnode[2]
projectsectionnode[[2]]
xml2::xml_children(projectsectionnode)
xml2::xml_children(projectsectionnode)[1]
xml2::xml_children(xml2::xml_children(projectsectionnode)[1])
xml2::xml_children(xml2::xml_children(projectsectionnode)[2])
xml2::xml_children(xml2::xml_children(projectsectionnode)[3])
xml2::xml_children(xml2::xml_children(projectsectionnode)[4])
xml2::xml_children(xml2::xml_children(projectsectionnode)[2])
xml2::xml_children(projectsectionnode)[2]
xml2::html_structure(projectsectionnode, file = tmp_html)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
xml2::as_list(projectsectionnode)
xml2::as_list(projectsectionnode)[[1]]
xml2::as_list(projectsectionnode)[[1]][[1]]
xml2::as_list(projectsectionnode)[[1]][[2]]
XML::xmlTreeParse(tmp_html)
XML::htmlTreeParse(tmp_html)
x <- XML::htmlTreeParse(tmp_html)
XML::saveXML(x, tmp_html)
x <- XML::htmlParse(tmp_html)
XML::saveXML(x, tmp_html)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
unlink(tmp_html)
projectsectionnode <- get_index_project_section(index)
tmp_html <- tempfile()
unlink(tmp_html)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
x <- XML::htmlParse(tmp_html)
XML::saveXML(x, tmp_html)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
x <- XML::htmlTreeParse(tmp_html)
XML::saveXML(x, tmp_html)
projectsectionnode
xml2::xml_ns_strip(projectsectionnode)
projectsectionnode
xml2::xml_find_all(projectsectionnode, "text()")
xml2::xml_find_all(projectsectionnode, "//text()")
xml2::xml_find_all(projectsectionnode, "/text()")
xml2::xml_find_all(projectsectionnode, "text()")
trimws("    x     n")
trimws("   \n\n    x     n")
xml2::xml_find_all(projectsectionnode, "text()")
xml2::xml_find_all(projectsectionnode, "//text()")
textnodes <- xml2::xml_find_all(projectsectionnode, "//text()")
xml2::xml_text(textnodes)
trimws(xml2::xml_text(textnodes))
xml2::xml_text(textnodes) <- trimws(xml2::xml_text(textnodes))
xml2::xml_text(textnodes)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
projectsectionnode <- get_index_project_section(index)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
source('~/Desktop/labbook/R/index.R')
projectsectionnode <- get_index_project_section(index)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
tmp_html <- tempfile()
unlink(tmp_html)
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
x <- XML::htmlParse(tmp_html)
x
textnodes <- xml2::xml_find_all(projectsectionnode, "//text()")
xml2::xml_text(textnodes) <- trimws(xml2::xml_text(textnodes))
xml2::write_html(projectsectionnode, tmp_html, options = c("format", "format_whitespace"))
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
x <- XML::htmlParse(tmp_html)
x
XML::saveXML(x, tmp_html, indent = 2)
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
XML::saveXML(x, tmp_html, indent = 2, prefix = '')
system2("open", args = c("-a", "'Sublime Text'", tmp_html))
source('~/Desktop/labbook/R/index.R')
index
print(index)
cat(index)
index
projectsectionnode <- get_index_project_section(index)
xml2::xml_find_all(projectsectionnode, "//text()")
xml2::xml_find_all(projectsectionnode, "text()")
xml2::xml_find_all(projectsectionnode, "descendant::text()")
textnodes <- xml2::xml_find_all(projectsectionnode, "descendant::text()")
xml2::xml_text(textnodes) <- trimws(xml2::xml_text(textnodes))
projectsectionnode
tmpfile <- tempfile()
write_index(index, tmpfile)
system2("open", c("-a", "'Sublime Text'", tmpfile))
source('~/Desktop/labbook/R/index.R')
system2("open", c("-a", "'Sublime Text'", tmpfile))
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
system2(
command = "prettier",
args    = c("--print-width 400", index_path)
)
prettyindex <- system2(
command = "prettier",
args    = c("--print-width 400", index_path),
stdout  = TRUE
)
prettyindex
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
source('~/Desktop/labbook/R/index.R')
index <- read_index("~/Dropbox/labbook/index.html")
xml2::xml_find_first(index, "section[@id='archive']")
xml2::xml_find_first(index, "//section[@id='archive']")
xml2::xml_find_all(archive_section_node, "//a")
archive_section_node <- xml2::xml_find_first(index, "//section[@id='archive']")
xml2::xml_find_all(archive_section_node, "//a")
xml2::xml_find_all(archive_section_node, "/a")
xml2::xml_find_all(archive_section_node, "descendant::a")
archive_links <- xml2::xml_find_all(archive_section_node, "descendant::a")
xml2::xml_attr("href")
xml2::xml_attr(archive_links, "href")
file.path("archive", xml2::xml_attr(archive_links, "href"))
xml2::xml_attr(archive_links, "href") <- file.path("archive", xml2::xml_attr(archive_links, "href"))
xml2::xml_attr(archive_links, "href")
write_index("~/Dropbox/labbook/index.html")
write_index(index, "~/Dropbox/labbook/index.html")
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
library(testthat)
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
source('~/Desktop/labbook/tests/testthat/test-core_functions.R')
system2("open", file.path(tempdir(), "labbook"))
openTodo()
devtools::install(quick = TRUE)
system.file("labbook/library", package = "labbook")
unlink("inst/labbook", recursive = T)
dir.create("inst/labbook")
file.copy("~/Dropbox/LabBook2/index.html", "inst/labbook/index.html")
file.copy("~/Dropbox/labbook/library", "inst/labbook/library", overwrite = TRUE)
dir.create("inst/labbook/library")
file.copy("~/Dropbox/labbook/library", "inst/labbook/library", overwrite = TRUE)
file.copy("~/Dropbox/labbook/library/", "inst/labbook/library", overwrite = TRUE)
file.copy("~/Dropbox/labbook/library/", "inst/labbook/library/", overwrite = TRUE)
unlink("inst/labbook/library", recursive = TRUE)
dir.create("inst/labbook/library")
file.copy("~/Dropbox/labbook/library", "inst/labbook/library", recursive = TRUE)
unlink("inst/labbook/library", recursive = TRUE)
file.copy("~/Dropbox/labbook/library", "inst/labbook", recursive = TRUE)
unlink("inst/labbook/library", recursive = TRUE)
file.copy("~/Dropbox/labbook/library", "inst/labbook", recursive = TRUE)
library(labbook)
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
library(labbook)
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
library(labbook)
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
library(labbook)
library(labbook)
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
library(labbook)
source('~/Dropbox/labbook/packages/labbook/labbook/tests/testthat/test-core_functions.R')
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
devtools::install()
devtools::install()
devtools::install()
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
library(labbook)
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
system.file("labbook/library", package = "labbook")
system.file("labbook/index.html", package = "labbook")
source('~/Dropbox/labbook/packages/labbook/dev/update_library.R')
library(labbook)
.libPaths()
unlink("inst/labbook/library", recursive = TRUE)
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
source('~/Dropbox/labbook/packages/labbook/dev/update_library.R')
unlink("~/Desktop/labbook", recursive = TRUE)
source('~/Dropbox/labbook/packages/labbook/examples/example_setup.R')
rstudioapi::documentSave()
rstudioapi::documentSave
rstudioapi:::callFun
rstudioapi:::toolsName("documentSave")
rstudioapi:::findFun("documentSave")
rstudioapi:::.rs.api.getSourceEditorContext()
.rs.api.getSourceEditorContext()
.rs.api.getSourceEditorContext()
